Search.setIndex({"docnames": ["api/queue", "api/task", "api/unique_handle", "api/utility", "index"], "filenames": ["api/queue.rst", "api/task.rst", "api/unique_handle.rst", "api/utility.rst", "index.rst"], "titles": ["libfork/queue.hpp", "libfork/task.hpp", "libfork/unique_handle.hpp", "libfork/utility.hpp", "Welcome to libfork v2.0.0-alpha"], "terms": {"A": [0, 1, 2, 3], "stand": 0, "alon": 0, "product": 0, "qualiti": 0, "implement": [0, 2, 3], "chase": 0, "lev": 0, "lock": 0, "free": [0, 3], "singl": 0, "produc": [0, 1], "multipl": 0, "consum": 0, "describ": 0, "paper": 0, "dynam": 0, "circular": 0, "work": [0, 1], "steal": 0, "correct": 0, "effici": 0, "weak": 0, "memori": 0, "model": 0, "both": 0, "ar": 0, "avail": [0, 3], "refer": [0, 1], "doxygenconcept": [0, 1], "cannot": [0, 1, 2], "find": [0, 1], "concept": [0, 1], "lf": [0, 1, 2], "simpl": 0, "doxygen": [0, 1], "xml": [0, 1], "output": [0, 1], "project": [0, 1], "from": [0, 1, 2], "directori": [0, 1], "home": [0, 1], "runner": [0, 1], "build": [0, 1, 4], "doc": [0, 1], "templat": [0, 1, 2], "t": [0, 1], "class": [0, 1, 2], "an": [0, 1, 2, 3], "unbound": 0, "onli": [0, 3], "owner": 0, "can": 0, "perform": 0, "pop": 0, "push": 0, "oper": [0, 1, 2], "where": 0, "behav": 0, "like": 0, "lifo": 0, "stack": 0, "other": [0, 2], "data": 0, "thei": 0, "see": [0, 4], "fifo": 0, "all": 0, "thread": [0, 1], "must": 0, "have": [0, 1], "finish": 0, "us": [0, 1, 3, 4], "befor": 0, "i": [0, 1, 2, 3, 4], "destruct": 0, "exampl": 0, "includ": 0, "auto": [0, 1, 2], "int": 0, "constexpr": [0, 1, 2], "num_item": 0, "10000": 0, "One": 0, "item": 0, "one": 0, "end": 0, "std": [0, 1, 2, 3], "jthread": 0, "0": 0, "while": 0, "option": 0, "do": 0, "someth": 0, "ani": 0, "thief": 0, "empti": [0, 2], "join": [0, 1], "return": [0, 1], "paramet": [0, 1], "The": [0, 1], "type": [0, 1], "element": 0, "public": [0, 1, 2], "value_typ": [0, 1], "function": [0, 2, 3, 4], "inlin": [0, 1, 2], "construct": [0, 1, 2], "new": [0, 1], "object": [0, 1], "delet": [0, 2], "": [0, 1, 3, 4], "copiabl": 0, "movabl": 0, "const": [0, 1, 2], "explicit": [0, 1, 2], "ptrdiff_t": 0, "cap": 0, "capac": 0, "power": 0, "2": 0, "noexcept": [0, 1, 2], "destroi": [0, 2], "get": [0, 1], "bool": [0, 1, 2], "check": [0, 1], "assign": [0, 2], "out": 0, "nullopt": 0, "thi": [0, 1, 3, 4], "fail": 0, "e": [0, 3], "val": 0, "void": [0, 1, 2], "insert": 0, "trigger": 0, "resiz": 0, "more": 0, "space": 0, "requir": [0, 1], "valu": [0, 1], "add": 0, "size": 0, "size_t": 0, "number": 0, "ssize": 0, "sign": 0, "integ": 0, "steal_t": 0, "try": 0, "anoth": 0, "simulatni": 0, "stole": 0, "struct": [0, 1], "suitabl": 0, "structur": 0, "bind": 0, "succeed": 0, "code": 0, "err": 0, "none": 0, "member": [0, 1], "error": 0, "stolen": 0, "valid": 0, "associ": 1, "util": [1, 4], "context": 1, "typenam": [1, 2], "alloc": 1, "root": 1, "basic_task": 1, "privat": 1, "unique_handl": [1, 4], "detail": [1, 2], "promise_typ": 1, "central": 1, "librari": 1, "coroutin": 1, "repres": 1, "unit": 1, "support": 1, "custom": 1, "static": 1, "eras": 1, "lead": 1, "convent": 1, "execut": 1, "run": 1, "whether": 1, "context_typ": 1, "future_typ": 1, "basic_futur": 1, "handle_typ": 1, "task_handl": 1, "promis": 1, "fork": [1, 2], "awaitabal": 1, "which": 1, "caus": 1, "current": 1, "make_promis": 1, "named_pair": 1, "decompos": 1, "caller": 1, "call": 1, "resum": 1, "aggreg": 1, "name": 1, "tupl": 1, "result": 1, "own": 1, "comput": 1, "mai": [1, 3], "complet": 1, "yet": 1, "default": 1, "uniqu": 1, "is_readi": 1, "ha": [1, 3], "non": [1, 2], "block": 1, "just_t": 1, "is_void_v": 1, "access": [1, 2], "wait": 1, "until": 1, "work_handl": 1, "fals": 1, "trivial": 1, "gener": 1, "ownership": [1, 2], "respons": 1, "root_handl": 1, "true": [1, 3], "To": 1, "make": 1, "should": [1, 3], "tag": 1, "when": 1, "co_await": 1, "group": 1, "as_root": 1, "convert": 1, "forward": 1, "p": 2, "raii": 2, "handl": [2, 4], "coroutine_handl": 2, "subclass": 2, "manag": 2, "move": 2, "copi": 2, "test": 2, "underli": 2, "null": 2, "releas": 2, "small": 3, "collect": 3, "assert": 3, "expr": 3, "messag": 3, "express": 3, "termin": 3, "op": 3, "ndebug": 3, "defin": 3, "assum": 3, "wrapper": 3, "c": 3, "23": 3, "attribut": 3, "revert": 3, "compil": 3, "specif": 3, "some": 3, "intrins": 3, "gcc": 3, "__builtin_unreach": 3, "differ": 3, "semant": 3, "than": 3, "WILL": 3, "evalu": 3, "exprssion": 3, "runtim": 3, "henc": 3, "you": 3, "conservativli": 3, "side": 3, "effect": 3, "cheap": 3, "assert_assum": 3, "otherwis": 3, "debug_track": 3, "log": 3, "clog": 3, "fork_no_log": 3, "api": 4, "document": 4, "inform": 4, "instal": 4, "pleas": 4, "readm": 4, "md": 4, "task": 4, "hpp": 4, "futur": 4, "queue": 4, "macro": 4}, "objects": {"": [[3, 0, 1, "c.ASSERT", "ASSERT"], [3, 0, 1, "c.ASSERT_ASSUME", "ASSERT_ASSUME"], [3, 0, 1, "c.ASSUME", "ASSUME"], [3, 0, 1, "c.DEBUG_TRACKER", "DEBUG_TRACKER"], [1, 1, 1, "_CPPv4I000EN2lf7as_rootE10basic_taskI1T7Context9AllocatorXL1EEERR10basic_taskI1T7Context9AllocatorXL0EEE", "lf::as_root"], [1, 1, 1, "_CPPv4I000EN2lf7as_rootERR10basic_taskI1T7Context9AllocatorXL0EEERR10basic_taskI1T7Context9AllocatorXL1EEE", "lf::as_root"], [1, 2, 1, "_CPPv4I000EN2lf7as_rootE10basic_taskI1T7Context9AllocatorXL1EEERR10basic_taskI1T7Context9AllocatorXL0EEE", "lf::as_root::Allocator"], [1, 2, 1, "_CPPv4I000EN2lf7as_rootERR10basic_taskI1T7Context9AllocatorXL0EEERR10basic_taskI1T7Context9AllocatorXL1EEE", "lf::as_root::Allocator"], [1, 2, 1, "_CPPv4I000EN2lf7as_rootE10basic_taskI1T7Context9AllocatorXL1EEERR10basic_taskI1T7Context9AllocatorXL0EEE", "lf::as_root::Context"], [1, 2, 1, "_CPPv4I000EN2lf7as_rootERR10basic_taskI1T7Context9AllocatorXL0EEERR10basic_taskI1T7Context9AllocatorXL1EEE", "lf::as_root::Context"], [1, 2, 1, "_CPPv4I000EN2lf7as_rootE10basic_taskI1T7Context9AllocatorXL1EEERR10basic_taskI1T7Context9AllocatorXL0EEE", "lf::as_root::T"], [1, 2, 1, "_CPPv4I000EN2lf7as_rootERR10basic_taskI1T7Context9AllocatorXL0EEERR10basic_taskI1T7Context9AllocatorXL1EEE", "lf::as_root::T"], [1, 3, 1, "_CPPv4I000EN2lf7as_rootE10basic_taskI1T7Context9AllocatorXL1EEERR10basic_taskI1T7Context9AllocatorXL0EEE", "lf::as_root::task"], [1, 3, 1, "_CPPv4I000EN2lf7as_rootERR10basic_taskI1T7Context9AllocatorXL0EEERR10basic_taskI1T7Context9AllocatorXL1EEE", "lf::as_root::task"], [1, 4, 1, "_CPPv4I0_7context0_bEN2lf12basic_futureE", "lf::basic_future"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf12basic_futureE", "lf::basic_future::Allocator"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf12basic_futureE", "lf::basic_future::Context"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf12basic_futureE", "lf::basic_future::Root"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf12basic_futureE", "lf::basic_future::T"], [1, 1, 1, "_CPPv4N2lf12basic_future12basic_futureERR13unique_handleI12promise_typeE", "lf::basic_future::basic_future"], [1, 1, 1, "_CPPv4N2lf12basic_future12basic_futureEv", "lf::basic_future::basic_future"], [1, 3, 1, "_CPPv4N2lf12basic_future12basic_futureERR13unique_handleI12promise_typeE", "lf::basic_future::basic_future::handle"], [1, 5, 1, "_CPPv4N2lf12basic_future12context_typeE", "lf::basic_future::context_type"], [1, 1, 1, "_CPPv4IQ4RootEN2lf12basic_future8is_readyEv", "lf::basic_future::is_ready"], [1, 1, 1, "_CPPv4IQntNSt9is_void_vI1TEEENKO2lf12basic_futuremlEv", "lf::basic_future::operator*"], [1, 1, 1, "_CPPv4IQntNSt9is_void_vI1TEEENKR2lf12basic_futuremlEv", "lf::basic_future::operator*"], [1, 1, 1, "_CPPv4IQntNSt9is_void_vI1TEEENO2lf12basic_futuremlEv", "lf::basic_future::operator*"], [1, 1, 1, "_CPPv4IQntNSt9is_void_vI1TEEENR2lf12basic_futuremlEv", "lf::basic_future::operator*"], [1, 5, 1, "_CPPv4N2lf12basic_future12promise_typeE", "lf::basic_future::promise_type"], [1, 5, 1, "_CPPv4N2lf12basic_future10value_typeE", "lf::basic_future::value_type"], [1, 1, 1, "_CPPv4IQ4RootEN2lf12basic_future4waitEv", "lf::basic_future::wait"], [1, 4, 1, "_CPPv4I0_7context0_bEN2lf10basic_taskE", "lf::basic_task"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf10basic_taskE", "lf::basic_task::Allocator"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf10basic_taskE", "lf::basic_task::Context"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf10basic_taskE", "lf::basic_task::Root"], [1, 2, 1, "_CPPv4I0_7context0_bEN2lf10basic_taskE", "lf::basic_task::T"], [1, 5, 1, "_CPPv4N2lf10basic_task12context_typeE", "lf::basic_task::context_type"], [1, 1, 1, "_CPPv4NO2lf10basic_task4forkEv", "lf::basic_task::fork"], [1, 5, 1, "_CPPv4N2lf10basic_task11future_typeE", "lf::basic_task::future_type"], [1, 5, 1, "_CPPv4N2lf10basic_task11handle_typeE", "lf::basic_task::handle_type"], [1, 1, 1, "_CPPv4IQ4RootENO2lf10basic_task12make_promiseEv", "lf::basic_task::make_promise"], [1, 4, 1, "_CPPv4N2lf10basic_task10named_pairE", "lf::basic_task::named_pair"], [1, 6, 1, "_CPPv4N2lf10basic_task10named_pair6futureE", "lf::basic_task::named_pair::future"], [1, 6, 1, "_CPPv4N2lf10basic_task10named_pair6handleE", "lf::basic_task::named_pair::handle"], [1, 5, 1, "_CPPv4N2lf10basic_task12promise_typeE", "lf::basic_task::promise_type"], [1, 5, 1, "_CPPv4N2lf10basic_task10value_typeE", "lf::basic_task::value_type"], [1, 1, 1, "_CPPv4N2lf10basic_taskD0Ev", "lf::basic_task::~basic_task"], [1, 1, 1, "_CPPv4N2lf4joinEv", "lf::join"], [0, 4, 1, "_CPPv4I_6simpleEN2lf5queueE", "lf::queue"], [0, 2, 1, "_CPPv4I_6simpleEN2lf5queueE", "lf::queue::T"], [0, 1, 1, "_CPPv4NK2lf5queue8capacityEv", "lf::queue::capacity"], [0, 1, 1, "_CPPv4NK2lf5queue5emptyEv", "lf::queue::empty"], [0, 1, 1, "_CPPv4N2lf5queueaSERK5queue", "lf::queue::operator="], [0, 1, 1, "_CPPv4N2lf5queueaSERR5queue", "lf::queue::operator="], [0, 3, 1, "_CPPv4N2lf5queueaSERK5queue", "lf::queue::operator=::other"], [0, 3, 1, "_CPPv4N2lf5queueaSERR5queue", "lf::queue::operator=::other"], [0, 1, 1, "_CPPv4N2lf5queue3popEv", "lf::queue::pop"], [0, 1, 1, "_CPPv4N2lf5queue4pushERK1T", "lf::queue::push"], [0, 3, 1, "_CPPv4N2lf5queue4pushERK1T", "lf::queue::push::val"], [0, 1, 1, "_CPPv4N2lf5queue5queueENSt9ptrdiff_tE", "lf::queue::queue"], [0, 1, 1, "_CPPv4N2lf5queue5queueERK5queue", "lf::queue::queue"], [0, 1, 1, "_CPPv4N2lf5queue5queueERR5queue", "lf::queue::queue"], [0, 1, 1, "_CPPv4N2lf5queue5queueEv", "lf::queue::queue"], [0, 3, 1, "_CPPv4N2lf5queue5queueENSt9ptrdiff_tE", "lf::queue::queue::cap"], [0, 3, 1, "_CPPv4N2lf5queue5queueERK5queue", "lf::queue::queue::other"], [0, 3, 1, "_CPPv4N2lf5queue5queueERR5queue", "lf::queue::queue::other"], [0, 1, 1, "_CPPv4NK2lf5queue4sizeEv", "lf::queue::size"], [0, 1, 1, "_CPPv4NK2lf5queue5ssizeEv", "lf::queue::ssize"], [0, 1, 1, "_CPPv4N2lf5queue5stealEv", "lf::queue::steal"], [0, 4, 1, "_CPPv4N2lf5queue7steal_tE", "lf::queue::steal_t"], [0, 6, 1, "_CPPv4N2lf5queue7steal_t4codeE", "lf::queue::steal_t::code"], [0, 1, 1, "_CPPv4NK2lf5queue7steal_tcvbEv", "lf::queue::steal_t::operator bool"], [0, 1, 1, "_CPPv4N2lf5queue7steal_tmlEv", "lf::queue::steal_t::operator*"], [0, 1, 1, "_CPPv4N2lf5queue7steal_tptEv", "lf::queue::steal_t::operator-&gt;"], [0, 1, 1, "_CPPv4NK2lf5queue7steal_tptEv", "lf::queue::steal_t::operator-&gt;"], [0, 6, 1, "_CPPv4N2lf5queue7steal_t3valE", "lf::queue::steal_t::val"], [0, 5, 1, "_CPPv4N2lf5queue10value_typeE", "lf::queue::value_type"], [0, 1, 1, "_CPPv4N2lf5queueD0Ev", "lf::queue::~queue"], [1, 5, 1, "_CPPv4I0EN2lf11root_handleE", "lf::root_handle"], [1, 2, 1, "_CPPv4I0EN2lf11root_handleE", "lf::root_handle::Context"], [1, 4, 1, "_CPPv4I0_bEN2lf11task_handleE", "lf::task_handle"], [1, 2, 1, "_CPPv4I0_bEN2lf11task_handleE", "lf::task_handle::Context"], [1, 2, 1, "_CPPv4I0_bEN2lf11task_handleE", "lf::task_handle::Root"], [1, 1, 1, "_CPPv4NK2lf11task_handle6resumeER7Context", "lf::task_handle::resume"], [1, 3, 1, "_CPPv4NK2lf11task_handle6resumeER7Context", "lf::task_handle::resume::context"], [1, 1, 1, "_CPPv4N2lf11task_handle11task_handleEv", "lf::task_handle::task_handle"], [2, 4, 1, "_CPPv4I0EN2lf13unique_handleE", "lf::unique_handle"], [2, 2, 1, "_CPPv4I0EN2lf13unique_handleE", "lf::unique_handle::P"], [2, 1, 1, "_CPPv4NK2lf13unique_handlecvbEv", "lf::unique_handle::operator bool"], [2, 1, 1, "_CPPv4NK2lf13unique_handlemlEv", "lf::unique_handle::operator*"], [2, 1, 1, "_CPPv4NK2lf13unique_handleptEv", "lf::unique_handle::operator-&gt;"], [2, 1, 1, "_CPPv4N2lf13unique_handleaSERK13unique_handle", "lf::unique_handle::operator="], [2, 1, 1, "_CPPv4N2lf13unique_handleaSERR13unique_handle", "lf::unique_handle::operator="], [2, 3, 1, "_CPPv4N2lf13unique_handleaSERR13unique_handle", "lf::unique_handle::operator=::other"], [2, 1, 1, "_CPPv4N2lf13unique_handle7releaseEv", "lf::unique_handle::release"], [2, 1, 1, "_CPPv4N2lf13unique_handle13unique_handleENSt16coroutine_handleI1PEE", "lf::unique_handle::unique_handle"], [2, 1, 1, "_CPPv4N2lf13unique_handle13unique_handleERK13unique_handle", "lf::unique_handle::unique_handle"], [2, 1, 1, "_CPPv4N2lf13unique_handle13unique_handleERR13unique_handle", "lf::unique_handle::unique_handle"], [2, 1, 1, "_CPPv4N2lf13unique_handle13unique_handleEv", "lf::unique_handle::unique_handle"], [2, 3, 1, "_CPPv4N2lf13unique_handle13unique_handleENSt16coroutine_handleI1PEE", "lf::unique_handle::unique_handle::handle"], [2, 3, 1, "_CPPv4N2lf13unique_handle13unique_handleERR13unique_handle", "lf::unique_handle::unique_handle::other"], [2, 1, 1, "_CPPv4N2lf13unique_handleD0Ev", "lf::unique_handle::~unique_handle"], [1, 5, 1, "_CPPv4I0EN2lf11work_handleE", "lf::work_handle"], [1, 2, 1, "_CPPv4I0EN2lf11work_handleE", "lf::work_handle::Context"]]}, "objtypes": {"0": "c:macro", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:class", "5": "cpp:type", "6": "cpp:member"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "class", "C++ class"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "member", "C++ member"]}, "titleterms": {"libfork": [0, 1, 2, 3, 4], "queue": 0, "hpp": [0, 1, 2, 3], "task": 1, "futur": 1, "handl": 1, "function": 1, "unique_handl": 2, "util": 3, "macro": 3, "welcom": 4, "v2": 4, "0": 4, "alpha": 4, "file": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"libfork/queue.hpp": [[0, "libfork-queue-hpp"]], "libfork/task.hpp": [[1, "libfork-task-hpp"]], "Tasks": [[1, "tasks"]], "Futures": [[1, "futures"]], "Handles": [[1, "handles"]], "Functions": [[1, "functions"]], "libfork/unique_handle.hpp": [[2, "libfork-unique-handle-hpp"]], "libfork/utility.hpp": [[3, "libfork-utility-hpp"]], "Macros": [[3, "macros"]], "Welcome to libfork v2.0.0-alpha": [[4, "welcome-to-libfork-v2-0-0-alpha"]], "Files": [[4, null]]}, "indexentries": {"lf::queue (c++ class)": [[0, "_CPPv4I_6simpleEN2lf5queueE"]], "lf::queue::capacity (c++ function)": [[0, "_CPPv4NK2lf5queue8capacityEv"]], "lf::queue::empty (c++ function)": [[0, "_CPPv4NK2lf5queue5emptyEv"]], "lf::queue::operator= (c++ function)": [[0, "_CPPv4N2lf5queueaSERK5queue"], [0, "_CPPv4N2lf5queueaSERR5queue"]], "lf::queue::pop (c++ function)": [[0, "_CPPv4N2lf5queue3popEv"]], "lf::queue::push (c++ function)": [[0, "_CPPv4N2lf5queue4pushERK1T"]], "lf::queue::queue (c++ function)": [[0, "_CPPv4N2lf5queue5queueENSt9ptrdiff_tE"], [0, "_CPPv4N2lf5queue5queueERK5queue"], [0, "_CPPv4N2lf5queue5queueERR5queue"], [0, "_CPPv4N2lf5queue5queueEv"]], "lf::queue::size (c++ function)": [[0, "_CPPv4NK2lf5queue4sizeEv"]], "lf::queue::ssize (c++ function)": [[0, "_CPPv4NK2lf5queue5ssizeEv"]], "lf::queue::steal (c++ function)": [[0, "_CPPv4N2lf5queue5stealEv"]], "lf::queue::steal_t (c++ struct)": [[0, "_CPPv4N2lf5queue7steal_tE"]], "lf::queue::steal_t::code (c++ member)": [[0, "_CPPv4N2lf5queue7steal_t4codeE"]], "lf::queue::steal_t::operator bool (c++ function)": [[0, "_CPPv4NK2lf5queue7steal_tcvbEv"]], "lf::queue::steal_t::operator* (c++ function)": [[0, "_CPPv4N2lf5queue7steal_tmlEv"]], "lf::queue::steal_t::operator-> (c++ function)": [[0, "_CPPv4N2lf5queue7steal_tptEv"], [0, "_CPPv4NK2lf5queue7steal_tptEv"]], "lf::queue::steal_t::val (c++ member)": [[0, "_CPPv4N2lf5queue7steal_t3valE"]], "lf::queue::value_type (c++ type)": [[0, "_CPPv4N2lf5queue10value_typeE"]], "lf::queue::~queue (c++ function)": [[0, "_CPPv4N2lf5queueD0Ev"]], "lf::as_root (c++ function)": [[1, "_CPPv4I000EN2lf7as_rootE10basic_taskI1T7Context9AllocatorXL1EEERR10basic_taskI1T7Context9AllocatorXL0EEE"], [1, "_CPPv4I000EN2lf7as_rootERR10basic_taskI1T7Context9AllocatorXL0EEERR10basic_taskI1T7Context9AllocatorXL1EEE"]], "lf::basic_future (c++ class)": [[1, "_CPPv4I0_7context0_bEN2lf12basic_futureE"]], "lf::basic_future::basic_future (c++ function)": [[1, "_CPPv4N2lf12basic_future12basic_futureERR13unique_handleI12promise_typeE"], [1, "_CPPv4N2lf12basic_future12basic_futureEv"]], "lf::basic_future::context_type (c++ type)": [[1, "_CPPv4N2lf12basic_future12context_typeE"]], "lf::basic_future::is_ready (c++ function)": [[1, "_CPPv4IQ4RootEN2lf12basic_future8is_readyEv"]], "lf::basic_future::operator* (c++ function)": [[1, "_CPPv4IQntNSt9is_void_vI1TEEENKO2lf12basic_futuremlEv"], [1, "_CPPv4IQntNSt9is_void_vI1TEEENKR2lf12basic_futuremlEv"], [1, "_CPPv4IQntNSt9is_void_vI1TEEENO2lf12basic_futuremlEv"], [1, "_CPPv4IQntNSt9is_void_vI1TEEENR2lf12basic_futuremlEv"]], "lf::basic_future::promise_type (c++ type)": [[1, "_CPPv4N2lf12basic_future12promise_typeE"]], "lf::basic_future::value_type (c++ type)": [[1, "_CPPv4N2lf12basic_future10value_typeE"]], "lf::basic_future::wait (c++ function)": [[1, "_CPPv4IQ4RootEN2lf12basic_future4waitEv"]], "lf::basic_task (c++ class)": [[1, "_CPPv4I0_7context0_bEN2lf10basic_taskE"]], "lf::basic_task::context_type (c++ type)": [[1, "_CPPv4N2lf10basic_task12context_typeE"]], "lf::basic_task::fork (c++ function)": [[1, "_CPPv4NO2lf10basic_task4forkEv"]], "lf::basic_task::future_type (c++ type)": [[1, "_CPPv4N2lf10basic_task11future_typeE"]], "lf::basic_task::handle_type (c++ type)": [[1, "_CPPv4N2lf10basic_task11handle_typeE"]], "lf::basic_task::make_promise (c++ function)": [[1, "_CPPv4IQ4RootENO2lf10basic_task12make_promiseEv"]], "lf::basic_task::named_pair (c++ struct)": [[1, "_CPPv4N2lf10basic_task10named_pairE"]], "lf::basic_task::named_pair::future (c++ member)": [[1, "_CPPv4N2lf10basic_task10named_pair6futureE"]], "lf::basic_task::named_pair::handle (c++ member)": [[1, "_CPPv4N2lf10basic_task10named_pair6handleE"]], "lf::basic_task::promise_type (c++ type)": [[1, "_CPPv4N2lf10basic_task12promise_typeE"]], "lf::basic_task::value_type (c++ type)": [[1, "_CPPv4N2lf10basic_task10value_typeE"]], "lf::basic_task::~basic_task (c++ function)": [[1, "_CPPv4N2lf10basic_taskD0Ev"]], "lf::join (c++ function)": [[1, "_CPPv4N2lf4joinEv"]], "lf::root_handle (c++ type)": [[1, "_CPPv4I0EN2lf11root_handleE"]], "lf::task_handle (c++ class)": [[1, "_CPPv4I0_bEN2lf11task_handleE"]], "lf::task_handle::resume (c++ function)": [[1, "_CPPv4NK2lf11task_handle6resumeER7Context"]], "lf::task_handle::task_handle (c++ function)": [[1, "_CPPv4N2lf11task_handle11task_handleEv"]], "lf::work_handle (c++ type)": [[1, "_CPPv4I0EN2lf11work_handleE"]], "lf::unique_handle (c++ class)": [[2, "_CPPv4I0EN2lf13unique_handleE"]], "lf::unique_handle::operator bool (c++ function)": [[2, "_CPPv4NK2lf13unique_handlecvbEv"]], "lf::unique_handle::operator* (c++ function)": [[2, "_CPPv4NK2lf13unique_handlemlEv"]], "lf::unique_handle::operator-> (c++ function)": [[2, "_CPPv4NK2lf13unique_handleptEv"]], "lf::unique_handle::operator= (c++ function)": [[2, "_CPPv4N2lf13unique_handleaSERK13unique_handle"], [2, "_CPPv4N2lf13unique_handleaSERR13unique_handle"]], "lf::unique_handle::release (c++ function)": [[2, "_CPPv4N2lf13unique_handle7releaseEv"]], "lf::unique_handle::unique_handle (c++ function)": [[2, "_CPPv4N2lf13unique_handle13unique_handleENSt16coroutine_handleI1PEE"], [2, "_CPPv4N2lf13unique_handle13unique_handleERK13unique_handle"], [2, "_CPPv4N2lf13unique_handle13unique_handleERR13unique_handle"], [2, "_CPPv4N2lf13unique_handle13unique_handleEv"]], "lf::unique_handle::~unique_handle (c++ function)": [[2, "_CPPv4N2lf13unique_handleD0Ev"]], "assert (c macro)": [[3, "c.ASSERT"]], "assert_assume (c macro)": [[3, "c.ASSERT_ASSUME"]], "assume (c macro)": [[3, "c.ASSUME"]], "debug_tracker (c macro)": [[3, "c.DEBUG_TRACKER"]]}})