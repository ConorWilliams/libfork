name: vcpkg
on:
  push:
  pull_request:
    branches: 
    - main
  workflow_dispatch:
  schedule:
  - cron: '0 1 * * *'

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with: { python-version: "3.11" }

    - name: Install codespell
      run: pip3 install codespell
    
    - name: Install clang-format
      run: pip3 install clang-format

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format -P cmake/lint.cmake

    - name: Spell check
      if: always()
      run: cmake -P cmake/spell.cmake

  job:
    needs: [lint]

    name: test-${{ matrix.os }}-${{ github.workflow }}-${{ matrix.build-type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
        os: [ubuntu-latest, macos-13, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-13
            triplet: x64-osx

    steps:
      - uses: actions/checkout@v2
      
      - uses: ./.github/actions/setup

      - name: Restore from cache the dependencies and generate project files
        shell: pwsh
        run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])" -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} 

      - name: Build
        run: cmake --build build --config ${{ matrix.build-type }} -j 2

      - name: Install
        run: cmake --install build --config ${{ matrix.build-type }} --prefix prefix

      - name: Test
        if: matrix.os != 'windows-latest' && matrix.build-type == 'Release'
        working-directory: build
        run: ctest --output-on-failure --no-tests=error -C ${{ matrix.build-type }} -j 2